{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\React Project\\\\JS Project\\\\src\\\\components\\\\Dispaly.js\";\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Display = props => {\n  const BackDrop = props => {\n    /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }, this);\n  };\n  // Calculate total for each type of \n  const ModalOverlay = props => {\n    const totals = {};\n    props.data.forEach(item => {\n      const key = `${item.name}-${item.id}`;\n      if (!totals[key]) {\n        totals[key] = {\n          name: item.name,\n          id: item.id,\n          L: 0,\n          M: 0,\n          S: 0,\n          total: 0\n        };\n      }\n      totals[key][item.size] += 1;\n      totals[key].total += item.price;\n    });\n\n    // Calculate grand total\n    const grandTotal = Object.values(totals).reduce((total, item) => total + item.total, 0);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.values(totals).map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.name, \" - \", item.L, \"L \", item.M, \"M \", item.S, \"S - \", item.total]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Grand Total \", grandTotal]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Okay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(BackDrop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 34\n    }, this), document.getElementById('backdrop-root')), ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 34\n    }, this), document.getElementById('overlay-root'))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","ReactDom","jsxDEV","_jsxDEV","Display","props","BackDrop","fileName","_jsxFileName","lineNumber","columnNumber","ModalOverlay","totals","data","forEach","item","key","name","id","L","M","S","total","size","price","grandTotal","Object","values","reduce","children","map","index","Fragment","ReactDOM","createPortal","document","getElementById","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/React Project/JS Project/src/components/Dispaly.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDom from 'react-dom'\r\nconst Display = (props) => {\r\n    const BackDrop = (props)=>{\r\n        <div></div>\r\n    }\r\n  // Calculate total for each type of \r\n  const ModalOverlay = (props)=>{\r\n    const totals = {};\r\n\r\n    props.data.forEach((item) => {\r\n        const key = `${item.name}-${item.id}`;\r\n        if (!totals[key]) {\r\n        totals[key] = {\r\n            name: item.name,\r\n            id: item.id,\r\n            L: 0,\r\n            M: 0,\r\n            S: 0,\r\n            total: 0,\r\n        };\r\n        }\r\n        totals[key][item.size] += 1;\r\n        totals[key].total += item.price;\r\n    });\r\n\r\n    // Calculate grand total\r\n    const grandTotal = Object.values(totals).reduce((total, item) => total + item.total, 0);\r\n\r\n    return (\r\n        <div>\r\n        <header>\r\n            <ul>\r\n            {Object.values(totals).map((item, index) => (\r\n                <li key={index}>\r\n                {item.name} - {item.L}L {item.M}M {item.S}S - {item.total}\r\n                </li>\r\n            ))}\r\n            </ul>\r\n        </header>\r\n        <div>\r\n            Grand Total {grandTotal}\r\n        </div>\r\n        <footer>\r\n            <button>Okay</button>\r\n            <button>Cancel</button>\r\n        </footer>\r\n        </div>\r\n    );\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n          {ReactDOM.createPortal(<BackDrop />, document.getElementById('backdrop-root'))}\r\n          {ReactDOM.createPortal(<ModalOverlay />, document.getElementById('overlay-root'))}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n  \r\nexport default Display;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}